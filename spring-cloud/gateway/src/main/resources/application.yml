server.port: 8443

spring.application.name: gateway

# classpath 에 인증서를 지정하여 사용하는 것은 local 개발시에만 사용해야 하며, 실제 서버를 올릴때에는 외부인증서로 교체해야 한다
# 외부 인증서 교체는 JAR 파일을 수정할 필요 없이 외부 설정만으로 처리가 가능해야 함
server.ssl:
  key-store-type: PKCS12
  key-store: classpath:keystore/edge.p12
  key-store-password: password
  key-alias: localhost

app:
  eureka-username: u
  eureka-password: p
  eureka-server: localhost
  auth-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: "http://${app.eureka-username}:${app.eureka-password}@${app.eureka-server}:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5


management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    org.springframework.cloud.gateway: TRACE
# predicates : 조건자 해당 URL 체크 조건 설정
# lb:// ~ : spring cloud gateway 가 client 쪽 load balancer 를 이용하여 검색 서비스에서 대상을 찾도록 지시
# filters : predicates 에 해당하는 url 을 지정하는 path 로 변경
spring:
  cloud:
    gateway:
      server:
        webflux:
          routes:

            - id: product-composite
              uri: lb://product-composite
              predicates:
                - Path=/product-composite/**

            - id: oauth2-server
              uri: lb://auth-server
              predicates:
                - Path=/oauth2/**
              filters:
                - PreserveHostHeader
                - SetRequestHeader=X-Forwarded-Proto, https
                - SetRequestHeader=X-Forwarded-Port, 8443

            - id: oauth2-login
              uri: lb://auth-server
              predicates:
                - Path=/login/**
              filters:
                - PreserveHostHeader
                - SetRequestHeader=X-Forwarded-Proto, https
                - SetRequestHeader=X-Forwarded-Port, 8443

            - id: oauth2-error
              uri: lb://auth-server
              predicates:
                - Path=/error/**
              filters:
                - PreserveHostHeader
                - SetRequestHeader=X-Forwarded-Proto, https
                - SetRequestHeader=X-Forwarded-Port, 8443

            - id: product-composite-swagger-ui
              uri: lb://product-composite
              predicates:
                - Path=/openapi/**

            - id: product-composite-swagger-ui-webjars
              uri: lb://product-composite
              predicates:
                - Path=/webjars/**

            - id: eureka-api
              uri: http://${app.eureka-server}:8761
              predicates:
                - Path=/eureka/api/{segment}
              filters:
                - SetPath=/eureka/{segment}

            - id: eureka-web-start
              uri: http://${app.eureka-server}:8761
              predicates:
                - Path=/eureka/web
              filters:
                - SetPath=/

            - id: eureka-web-other
              uri: http://${app.eureka-server}:8761
              predicates:
                - Path=/eureka/**

            - id: host_route_200
              uri: http://httpstat.us
              predicates:
                - Host=i.feel.lucky:8080
                - Path=/headerrouting/**
              filters:
                - SetPath=/200

            - id: host_route_418
              uri: http://httpstat.us
              predicates:
                - Host=im.a.teapot:8080
                - Path=/headerrouting/**
              filters:
                - SetPath=/418

            - id: host_route_501
              uri: http://httpstat.us
              predicates:
                - Path=/headerrouting/**
              filters:
                - SetPath=/501

spring.security.oauth2.resourceserver.jwt.issuer-uri: http://${app.auth-server}:9999

---
spring.config.activate.on-profile: docker

app:
  eureka-server: eureka
  auth-server: auth-server
